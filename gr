--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v84=0;while true do if (v84==0) then v19=v0(v3(v30,1,1));return "";end end else local v85=v2(v0(v30,16));if v19 then local v108=v5(v85,v19);v19=nil;return v108;else return v85;end end end);local function v20(v31,v32,v33) if v33 then local v86=0 -0 ;local v87;while true do if (v86==(117 -(32 + 85))) then v87=(v31/((5 -3)^(v32-(878 -(282 + 595)))))%(2^(((v33-(1 -0)) -(v32-(2 -1))) + ((608 + 12) -(555 + 15 + 49)))) ;return v87-(v87%(932 -(857 + 74))) ;end end else local v88=(1067 -(68 + 997))^(v32-1) ;return (((v31%(v88 + v88))>=v88) and (569 -(367 + 201))) or (927 -(214 + 713)) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (959 -(892 + 65)) );v18=v18 + (4 -2) ;return (v36 * (472 -216)) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + 3 );v18=v18 + (7 -3) ;return (v40 * (16777566 -(87 + 193 + 70))) + (v39 * ((161343 -95627) -(67 + 113))) + (v38 * 256) + v37 ;end local function v24() local v41=v23();local v42=v23();local v43=1;local v44=(v20(v42,1 + 0 ,79 -59 ) * ((954 -(802 + 150))^(85 -53))) + v41 ;local v45=v20(v42,21,55 -24 );local v46=((v20(v42,24 + (29 -21) )==(443 -(416 + 26))) and  -(998 -(915 + 82))) or (3 -2) ;if (v45==(0 -0)) then if (v44==0) then return v46 * ((0 -0) + 0) ;else local v109=0 -0 ;while true do if (v109==(0 -0)) then v45=1188 -(1069 + 118) ;v43=0 -0 ;break;end end end elseif (v45==(4477 -2430)) then return ((v44==(1486 -(998 + (1347 -(814 + 45))))) and (v46 * (((2 -1) + 0)/(0 + 0 + 0)))) or (v46 * NaN) ;end return v8(v46,v45-(1817 -794) ) * (v43 + (v44/((2 + 0)^(843 -(368 + 249 + 174))))) ;end local function v25(v47) local v48=0 + 0 ;local v49;local v50;while true do if (v48==0) then v49=nil;if  not v47 then v47=v23();if (v47==(885 -(261 + 624))) then return "";end end v48=1 -0 ;end if ((1081 -(1020 + 60))==v48) then v49=v3(v16,v18,(v18 + v47) -(1424 -(630 + (2540 -(760 + 987)))) );v18=v18 + v47 ;v48=6 -(1917 -(1789 + 124)) ;end if (v48==2) then v50={};for v110=4 -3 , #v49 do v50[v110]=v2(v1(v3(v49,v110,v110)));end v48=2 + 1 ;end if ((9 -6)==v48) then return v6(v50);end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return function(v89,v90,v91,v92,v93,v94,v95,v96) local v89=(function() return 0;end)();local v90=(function() return;end)();local v91=(function() return;end)();while true do if (v89== #":") then if (v90== #" ") then v91=(function() return v92()~=(0 -0) ;end)();elseif (v90==2) then v91=(function() return v93();end)();elseif (v90== #"-19") then v91=(function() return v94();end)();end v95[v96]=(function() return v91;end)();break;end if (v89~=(0 -0)) then else local v117=(function() return 0 + 0 ;end)();while true do if (0==v117) then v90=(function() return v92();end)();v91=(function() return nil;end)();v117=(function() return 652 -(494 + 157) ;end)();end if (v117==(1 -0)) then v89=(function() return  #",";end)();break;end end end end return v89,v90,v91,v92,v93,v94,v95,v96;end;end)();local v52=(function() return function(v97,v98,v99) local v100=(function() return 0 + 0 ;end)();while true do if ((0 + 0)~=v100) then else local v118=(function() return 0 + 0 ;end)();while true do if (0~=v118) then else v97[v98-#"\\" ]=(function() return v99();end)();return v97,v98,v99;end end end end end;end)();local v53=(function() return {};end)();local v54=(function() return {};end)();local v55=(function() return {};end)();local v56=(function() return {v53,v54,nil,v55};end)();local v57=(function() return v23();end)();local v58=(function() return {};end)();for v66= #" ",v57 do FlatIdent_104D4,Type,Cons,v21,v24,v25,v58,v66=(function() return v51(FlatIdent_104D4,Type,Cons,v21,v24,v25,v58,v66);end)();end v56[ #"91("]=(function() return v21();end)();for v67= #"}",v23() do local v68=(function() return v21();end)();if (v20(v68, #"/", #"[")~=0) then else local v104=(function() return 0;end)();local v105=(function() return;end)();local v106=(function() return;end)();local v107=(function() return;end)();while true do if (v104==1) then v107=(function() return {v22(),v22(),nil,nil};end)();if (v105==0) then local v122=(function() return 0;end)();local v123=(function() return;end)();while true do if (v122==0) then v123=(function() return 0;end)();while true do if (v123==0) then v107[ #"xnx"]=(function() return v22();end)();v107[ #"http"]=(function() return v22();end)();break;end end break;end end elseif (v105== #"]") then v107[ #"91("]=(function() return v23();end)();elseif (v105==(204 -(14 + 188))) then v107[ #"19("]=(function() return v23() -((677 -(534 + 141))^(7 + 9)) ;end)();elseif (v105~= #"19(") then else local v131=(function() return 0;end)();local v132=(function() return;end)();while true do if (v131==0) then v132=(function() return 0 + 0 ;end)();while true do if (v132~=(0 + 0)) then else v107[ #"xxx"]=(function() return v23() -(2^(33 -17)) ;end)();v107[ #"http"]=(function() return v22();end)();break;end end break;end end end v104=(function() return 2 -0 ;end)();end if (v104~=(0 -0)) then else local v119=(function() return 0;end)();while true do if (0~=v119) then else v105=(function() return v20(v68,2 + 0 , #"xnx");end)();v106=(function() return v20(v68, #"0313",4 + 2 );end)();v119=(function() return 1;end)();end if (v119~=1) then else v104=(function() return 397 -(115 + 281) ;end)();break;end end end if (v104~=(6 -3)) then else if (v20(v106, #"asd", #"19(")~= #"~") then else v107[ #".dev"]=(function() return v58[v107[ #"0836"]];end)();end v53[v67]=(function() return v107;end)();break;end if (v104==(2 + 0)) then if (v20(v106, #"}", #">")== #"~") then v107[2]=(function() return v58[v107[2]];end)();end if (v20(v106,2,2)~= #" ") then else v107[ #"nil"]=(function() return v58[v107[ #"91("]];end)();end v104=(function() return 3;end)();end end end end for v69= #"/",v23() do v54,v69,v28=(function() return v52(v54,v69,v28);end)();end return v56;end local function v29(v60,v61,v62) local v63=v60[2 -1 ];local v64=v60[7 -5 ];local v65=v60[870 -(550 + 317) ];return function(...) local v70=v63;local v71=v64;local v72=v65;local v73=v27;local v74=1887 -(927 + 959) ;local v75= -((3 -2) -(732 -(16 + 716)));local v76={};local v77={...};local v78=v12("#",...) -(2 -1) ;local v79={};local v80={};for v101=285 -(134 + 151) ,v78 do if ((422<=1157) and (v101>=v72)) then v76[v101-v72 ]=v77[v101 + ((3215 -1549) -(970 + 695)) ];else v80[v101]=v77[v101 + (1 -0) ];end end local v81=(v78-v72) + (1991 -(582 + 1408)) ;local v82;local v83;while true do v82=v70[v74];v83=v82[3 -2 ];if (v83<=(39 -7)) then if ((v83<=(56 -(138 -(11 + 86)))) or (604>978)) then if ((v83<=7) or (4484==900)) then if (v83<=(1827 -(1195 + 629))) then if ((v83<=1) or (4459<=1113)) then if (v83==(0 -0)) then local v133=v82[3];local v134=v80[v133];for v241=v133 + ((590 -348) -(187 + 54)) ,v82[784 -(162 + (903 -(175 + 110))) ] do v134=v134   .. v80[v241] ;end v80[v82[2 + 0 ]]=v134;else v80[v82[2]][v82[(4 -2) + 1 ]]=v82[8 -4 ];end elseif ((3632>3398) and (v83==(2 -0))) then local v138=0 + 0 ;local v139;while true do if (v138==(1636 -(1373 + 263))) then v139=v82[1002 -(451 + 549) ];v80[v139]=v80[v139](v13(v80,v139 + 1 + 0 ,v75));break;end end else v80[v82[2 -0 ]]=v80[v82[4 -(4 -3) ]];end elseif (v83<=(1389 -(746 + 638))) then if ((4082<=4917) and (v83>(2 + 2))) then local v142=0;local v143;while true do if (v142==((1796 -(503 + 1293)) -0)) then v143=v82[343 -(218 + 123) ];v80[v143]=v80[v143](v13(v80,v143 + (1582 -(1535 + 46)) ,v82[3 + 0 ]));break;end end else v80[v82[1 + 1 ]]=v82[(1572 -1009) -(306 + 254) ];end elseif (v83==6) then if v80[v82[1 + 1 ]] then v74=v74 + 1 ;else v74=v82[5 -2 ];end else v80[v82[1469 -(899 + 568) ]]=v80[v82[2 + 1 ]] * v82[9 -5 ] ;end elseif ((4832>=1386) and (v83<=(614 -(268 + 335)))) then if (v83<=(299 -(44 + 16 + 230))) then if (v83>((1641 -(810 + 251)) -(426 + 146))) then v80[v82[1 + 0 + 1 ]]=v62[v82[1 + 2 ]];else v80[v82[2 + 0 ]]=v80[v82[3]] -v80[v82[1460 -((815 -(43 + 490)) + 1174) ]] ;end elseif (v83==(821 -(569 + 242))) then local v150=0 -0 ;local v151;local v152;local v153;while true do if ((137==137) and (v150==(1 + 0))) then v153=v82[1027 -(706 + (1051 -(711 + 22))) ];for v315=1252 -((2788 -2067) + 530) ,v153 do v152[v315]=v80[v151 + v315 ];end break;end if (v150==(1271 -(945 + 326))) then v151=v82[2];v152=v80[v151];v150=2 -1 ;end end else local v154=v82[861 -(240 + 619) ];local v155=v80[v82[1 + 2 + 0 ]];v80[v154 + 1 ]=v155;v80[v154]=v155[v82[4]];end elseif (v83<=(713 -(271 + 429))) then if (v83==(12 + 0)) then if (v80[v82[1502 -(1408 + 92) ]]==v82[1090 -(461 + 625) ]) then v74=v74 + (1289 -(993 + (469 -174))) ;else v74=v82[3];end else v80[v82[2]]=v80[v82[1 + 2 ]][v82[1175 -(418 + 753) ]];end elseif (v83>(1 + 5 + 8)) then local v161=v82[1 + 1 ];v80[v161]=v80[v161](v13(v80,v161 + 1 ,v75));else local v163=v82[3];local v164=v80[v163];for v242=v163 + (1745 -(1344 + 400)) ,v82[4] do v164=v164   .. v80[v242] ;end v80[v82[(406 -(255 + 150)) + 1 ]]=v164;end elseif (v83<=(6 + 17)) then if (v83<=(548 -(406 + 123))) then if (v83<=17) then if (v83==(1785 -(1749 + 20))) then local v166=0 + 0 ;local v167;while true do if (v166==(1322 -(1249 + 73))) then v167=v82[2];do return v13(v80,v167,v167 + v82[2 + 0 + 1 ] );end break;end end elseif (v80[v82[1147 -(466 + 679) ]]==v80[v82[9 -5 ]]) then v74=v74 + (2 -1) ;else v74=v82[3];end elseif ((v83==(1918 -(106 + 1794))) or (1570>=4332)) then v80[v82[2]][v82[1 + 2 + 0 ]]=v82[4];else local v170=0 + 0 ;local v171;while true do if (v170==0) then v171=v82[5 -3 ];v80[v171](v80[v171 + 1 ]);break;end end end elseif ((v83<=(56 -35)) or (4064<=1819)) then if ((v83==20) or (4986<1574)) then local v172=v82[2];local v173={v80[v172](v80[v172 + (585 -(57 + 527)) ])};local v174=1427 -(41 + 1386) ;for v243=v172,v82[107 -(17 + 86) ] do v174=v174 + 1 ;v80[v243]=v173[v174];end else local v175=v71[v82[3]];local v176;local v177={};v176=v10({},{__index=function(v246,v247) local v248=0 + 0 ;local v249;while true do if ((4426>172) and (v248==(0 -0))) then v249=v177[v247];return v249[2 -1 ][v249[2]];end end end,__newindex=function(v250,v251,v252) local v253=v177[v251];v253[167 -(122 + 44) ][v253[2 -0 ]]=v252;end});for v255=3 -2 ,v82[4 + 0 ] do v74=v74 + 1 + (0 -0) ;local v256=v70[v74];if (v256[1 -0 ]==(127 -(30 + 35))) then v177[v255-(1 + 0) ]={v80,v256[3]};else v177[v255-1 ]={v61,v256[7 -4 ]};end v79[ #v79 + (581 -(361 + 219)) ]=v177;end v80[v82[322 -(53 + (673 -(183 + 223))) ]]=v29(v175,v176,v62);end elseif (v83>(5 + 17)) then v74=v82[416 -(15 + 398) ];else local v180=v82[984 -(18 + 964) ];local v181={v80[v180](v80[v180 + 1 ])};local v182=(0 -0) -0 ;for v258=v180,v82[4] do v182=v182 + 1 ;v80[v258]=v181[v182];end end elseif (v83<=(16 + 11)) then if ((586>455) and (v83<=(16 + 9))) then if ((826==826) and (v83>((580 + 294) -(20 + 830)))) then v80[v82[2 + 0 ]][v82[3]]=v80[v82[4]];else local v185=v82[128 -(116 + 10) ];v80[v185](v13(v80,v185 + 1 + 0 ,v82[741 -(542 + 196) ]));end elseif ((v83>26) or (4019>4441)) then v80[v82[3 -1 ]]={};else local v187=0 + 0 ;local v188;local v189;local v190;while true do if ((2017<4261) and (v187==(0 + 0))) then v188=v71[v82[2 + 1 + 0 ]];v189=nil;v187=2 -1 ;end if ((4716>80) and (v187==(4 -2))) then for v319=1552 -(1126 + 425) ,v82[409 -(118 + (624 -(10 + 327))) ] do v74=v74 + (3 -2) ;local v320=v70[v74];if (v320[1122 -(118 + 1003) ]==(181 -119)) then v190[v319-(378 -(142 + 235)) ]={v80,v320[980 -(553 + 424) ]};else v190[v319-(1 -0) ]={v61,v320[3 + 0 ]};end v79[ #v79 + 1 + 0 ]=v190;end v80[v82[2 + 0 ]]=v29(v188,v189,v62);break;end if ((v187==(1 + 0)) or (3507==3272)) then v190={};v189=v10({},{__index=function(v322,v323) local v324=v190[v323];return v324[450 -(108 + 341) ][v324[2 + 0 ]];end,__newindex=function(v325,v326,v327) local v328=v190[v326];v328[1][v328[4 -2 ]]=v327;end});v187=5 -3 ;end end end elseif ((v83<=(64 -35)) or (876>=3075)) then if (v83==28) then local v191=v82[1 + 1 ];local v192=v80[v191];for v261=v191 + (4 -3) ,v82[756 -(239 + 514) ] do v7(v192,v80[v261]);end else v80[v82[1 + 1 ]]=v80[v82[1332 -(797 + 532) ]] -v80[v82[3 + 1 ]] ;end elseif (v83<=(11 + 19)) then local v194=v82[4 -2 ];local v195,v196=v73(v80[v194](v13(v80,v194 + (1203 -(373 + 373 + 456)) ,v82[3])));v75=(v196 + v194) -1 ;local v197=731 -(476 + 255) ;for v262=v194,v75 do v197=v197 + (1131 -(369 + (3217 -2456))) ;v80[v262]=v195[v197];end elseif ((4352>2554) and (v83==(18 + 13))) then local v280=v82[2];v80[v280]=v80[v280](v80[v280 + (1 -0) ]);else local v282=0 -(1493 -(711 + 782)) ;local v283;while true do if (v282==0) then v283=v82[240 -(64 + 174) ];v80[v283]=v80[v283](v13(v80,v283 + (1 -0) ,v82[1 + 2 ]));break;end end end elseif (v83<=(70 -22)) then if ((v83<=((845 -(270 + 199)) -(144 + 192))) or (4406<4043)) then if (v83<=(252 -(14 + 28 + 174))) then if (v83<=(26 + 8)) then if (v83>(28 + 5)) then v74=v82[(1821 -(580 + 1239)) + 1 ];else local v199=v82[2];local v200=v80[v82[1507 -(363 + 1141) ]];v80[v199 + (1581 -((3516 -2333) + 397)) ]=v200;v80[v199]=v200[v82[4]];end elseif ((v83==((102 + 4) -(3 + 68))) or (1889>=3383)) then v80[v82[2 + 0 ]]=v80[v82[3 + 0 ]][v82[1979 -(1913 + 62) ]];elseif  not v80[v82[2 + 0 ]] then v74=v74 + (2 -1) ;else v74=v82[3];end elseif (v83<=38) then if ((1892<=2734) and (v83>(1970 -(565 + 596 + 772)))) then local v206=0 -0 ;local v207;while true do if (v206==(1661 -(1477 + 184))) then v207=v82[2 -0 ];v80[v207]=v80[v207]();break;end end else local v208=v82[2 + 0 ];v80[v208](v80[v208 + (857 -((1472 -908) + 292)) ]);end elseif (v83==(66 -27)) then v80[v82[(4 + 1) -3 ]]=v62[v82[307 -(244 + 60) ]];else local v211=0 + 0 ;local v212;while true do if ((1923<2218) and ((476 -(41 + 435))==v211)) then v212=v82[1003 -(938 + 63) ];v80[v212]=v80[v212]();break;end end end elseif (v83<=(34 + 10)) then if ((2173>379) and (v83<=42)) then if ((v83>(1208 -(645 + 522))) or (2591==3409)) then if  not v80[v82[2]] then v74=v74 + 1 ;else v74=v82[1128 -(936 + 189) ];end else local v213=v82[1 + 1 ];local v214,v215=v73(v80[v213](v13(v80,v213 + (1614 -(1565 + 48)) ,v82[2 + 1 ])));v75=(v215 + v213) -((2929 -(1010 + 780)) -(782 + 356)) ;local v216=267 -(176 + 91) ;for v265=v213,v75 do v216=v216 + (2 -1) ;v80[v265]=v214[v216];end end elseif (v83==(63 -20)) then if ((4514>3324) and (v80[v82[1094 -(975 + 117) ]]==v82[1879 -(157 + 1718) ])) then v74=v74 + 1 + 0 ;else v74=v82[10 -7 ];end else local v217=v82[6 -4 ];local v218=v80[v217];local v219=v82[1021 -(697 + 321) ];for v268=2 -1 ,v219 do v218[v268]=v80[v217 + v268 ];end end elseif (v83<=(97 -51)) then if (v83>(103 -58)) then for v271=v82[1 + 1 ],v82[5 -(2 + 0) ] do v80[v271]=nil;end else local v220=v82[2];local v221={};for v273=1, #v79 do local v274=v79[v273];for v287=0, #v274 do local v288=0;local v289;local v290;local v291;while true do if ((2 -1)==v288) then v291=v289[1229 -(322 + 905) ];if ((v290==v80) and (v291>=v220)) then local v342=611 -(602 + (42 -33)) ;while true do if (((0 -0)==v342) or (208>=4828)) then v221[v291]=v290[v291];v289[1837 -(1045 + 791) ]=v221;break;end end end break;end if ((v288==(1189 -((1136 -687) + 740))) or (1583>3567)) then v289=v274[v287];v290=v289[873 -(826 + 46) ];v288=948 -(245 + 702) ;end end end end end elseif ((v83>(148 -101)) or (1313==794)) then do return;end else do return v80[v82[1 + 1 ]];end end elseif ((3174>2902) and (v83<=(1954 -(260 + 1638)))) then if ((4120<=4260) and (v83<=(492 -(382 + 58)))) then if (v83<=((244 -84) -110)) then if (v83==((546 -(351 + 154)) + 8)) then v80[v82[3 -1 ]]= #v80[v82[8 -5 ]];else v80[v82[1207 -(902 + 303) ]]=v61[v82[5 -2 ]];end elseif (v83==(122 -(1645 -(1281 + 293)))) then if (v80[v82[1 + 1 ]]==v80[v82[1694 -(1121 + 569) ]]) then v74=v74 + 1 ;else v74=v82[217 -(22 + 192) ];end else local v225=683 -(483 + 200) ;local v226;local v227;while true do if ((v225==(1463 -(1404 + 59))) or (883>4778)) then v226=v82[2];v227={};v225=2 -1 ;end if (v225==(1 -0)) then for v330=267 -(28 + 238) , #v79 do local v331=765 -(468 + 297) ;local v332;while true do if (v331==(562 -(334 + 228))) then v332=v79[v330];for v344=0 -0 , #v332 do local v345=v332[v344];local v346=v345[2 -1 ];local v347=v345[2];if ((v346==v80) and (v347>=v226)) then local v351=0 -0 ;while true do if (v351==(0 + 0)) then v227[v347]=v346[v347];v345[1]=v227;break;end end end end break;end end end break;end end end elseif ((v83<=(290 -(141 + (211 -116)))) or (3620>=4891)) then if (v83>(53 + 0)) then for v275=v82[4 -2 ],v82[(1565 -(1381 + 178)) -3 ] do v80[v275]=nil;end else do return v80[v82[1 + 1 ]];end end elseif ((4258>937) and (v83>(150 -95))) then if v80[v82[2 + 0 ]] then v74=v74 + 1 + 0 ;else v74=v82[3];end else local v228=0 -0 ;local v229;while true do if ((v228==0) or (4869<906)) then v229=v82[2 + 0 + 0 ];v80[v229](v13(v80,v229 + (164 -(92 + 71)) ,v82[2 + 1 ]));break;end end end elseif ((v83<=(100 -40)) or (1225>4228)) then if ((3328>2238) and (v83<=((664 + 159) -(574 + 191)))) then if (v83>(48 + 9)) then local v230=v82[2];v80[v230]=v80[v230](v80[v230 + 1 ]);else v80[v82[4 -2 ]]= #v80[v82[3]];end elseif (v83==59) then v80[v82[2 + 0 ]]=v61[v82[852 -(254 + 254 + 341) ]];else do return;end end elseif ((3839>1405) and (v83<=(188 -(55 + 71)))) then if (v83>(80 -(65 -46))) then v80[v82[2]]=v80[v82[1793 -(573 + 1217) ]];else v80[v82[5 -3 ]]=v82[1 + 2 ];end elseif (v83<=(101 -38)) then v80[v82[941 -(714 + 225) ]][v82[8 -5 ]]=v80[v82[5 -1 ]];elseif (v83==(7 + 57)) then v80[v82[2 -0 ]]=v80[v82[809 -(118 + 688) ]] * v82[52 -(25 + 23) ] ;else v80[v82[1 + 1 ]]={};end v74=v74 + 1 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
